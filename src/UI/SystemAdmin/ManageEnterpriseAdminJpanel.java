/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SystemAdmin;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.CityNetwork;
import Business.Network.Network;
import Business.Network.StateNetwork;
import Business.Role.ClinicAdminRole;
import Business.Role.FDAAdminRole;
import Business.Role.HospitalAdminRole;
import Business.Role.PharmaceuticalCompanyAdminRole;
import Business.Role.PharmacyAdminRole;
import Business.Start.Ecosystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chirag
 */
public class ManageEnterpriseAdminJpanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseAdminJpanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;

    public ManageEnterpriseAdminJpanel(JPanel upc, Ecosystem sys) {
        initComponents();
        initComponents();
        this.ecosystem = sys;
        this.userProcessContainer = upc;
        populateManageTable();
        populateComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        managejTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nwjComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        enterprisejComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        adminnamejTextField = new javax.swing.JTextField();
        unamejLabel4 = new javax.swing.JLabel();
        usernamejTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        backButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        statejComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cityjComboBox = new javax.swing.JComboBox();
        passwordField = new javax.swing.JPasswordField();

        managejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Enterprise Type", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(managejTable);

        jLabel1.setText("Country Network:");

        nwjComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        nwjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nwjComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enterprise:");

        enterprisejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Admin Name:");

        unamejLabel4.setText("Username:");

        jLabel4.setText("Password:");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backButton2.setText("<<Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("State Network:");

        statejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statejComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("City Network:");

        cityjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityjComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(enterprisejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nwjComboBox1, 0, 188, Short.MAX_VALUE)
                                    .addComponent(statejComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 188, Short.MAX_VALUE)
                                    .addComponent(cityjComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 188, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(unamejLabel4)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(adminnamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(passwordField)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nwjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(adminnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unamejLabel4)
                    .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(statejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(cityjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(enterprisejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton2)
                            .addComponent(jButton1))))
                .addContainerGap(132, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void nwjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nwjComboBox1ActionPerformed
        // TODO add your handling code here:
        Network n = (Network) nwjComboBox1.getSelectedItem();
        populateStateComboBox(n);

    }//GEN-LAST:event_nwjComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Enterprise ent = (Enterprise) enterprisejComboBox.getSelectedItem();
        String uname = usernamejTextField.getText();
        char[] passwordCharArray = passwordField.getPassword();
        String password = String.valueOf(passwordCharArray);
        String adminname = adminnamejTextField.getText();
        Employee emp = ent.getEmployeeDirectory().createEmployee(adminname,null);

        if (ent.getEnterpriseType().getValue() == "Hospital") {
            ent.getUserAccountDirectory().createUserAccount(uname, password, emp, new HospitalAdminRole());
        } else if (ent.getEnterpriseType().getValue() == "Clinic") {
            ent.getUserAccountDirectory().createUserAccount(uname, password, emp, new ClinicAdminRole());
        } else if (ent.getEnterpriseType().getValue() == "Pharmacy") {
            ent.getUserAccountDirectory().createUserAccount(uname, password, emp, new PharmacyAdminRole());
        } else if (ent.getEnterpriseType().getValue() == "Pharmaceutical Company") {
            ent.getUserAccountDirectory().createUserAccount(uname, password, emp, new PharmaceuticalCompanyAdminRole());
        }  else if (ent.getEnterpriseType().getValue() == "FDA") {
            ent.getUserAccountDirectory().createUserAccount(uname, password, emp, new FDAAdminRole());  
        }
        populateManageTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void statejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statejComboBoxActionPerformed
        // TODO add your handling code here: 
        StateNetwork sn = (StateNetwork) statejComboBox.getSelectedItem();
        populateCityComboBox(sn);
    }//GEN-LAST:event_statejComboBoxActionPerformed

    private void cityjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityjComboBoxActionPerformed
        // TODO add your handling code here:
        CityNetwork cn = (CityNetwork) cityjComboBox.getSelectedItem();
        populateEnterpriseComboBox(cn);
    }//GEN-LAST:event_cityjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adminnamejTextField;
    private javax.swing.JButton backButton2;
    private javax.swing.JComboBox cityjComboBox;
    private javax.swing.JComboBox enterprisejComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable managejTable;
    private javax.swing.JComboBox nwjComboBox1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JComboBox statejComboBox;
    private javax.swing.JLabel unamejLabel4;
    private javax.swing.JTextField usernamejTextField;
    // End of variables declaration//GEN-END:variables

    private void populateComboBox() {
        nwjComboBox1.removeAllItems();
        for (Network n : ecosystem.getcountryNetworkList()) {
            nwjComboBox1.addItem(n);

        }

    }

    private void populateStateComboBox(Network n) {
        if (n != null) {
            statejComboBox.removeAllItems();
            for (StateNetwork sn : n.getStateNetworkList()) {
                statejComboBox.addItem(sn);
            }
        }
    }

    private void populateCityComboBox(StateNetwork sn) {
        if (sn != null) {
            cityjComboBox.removeAllItems();
            for (CityNetwork cn : sn.getCityNetworkList()) {
                cityjComboBox.addItem(cn);
            }
        }
    }

    private void populateManageTable() {
        DefaultTableModel model = (DefaultTableModel) managejTable.getModel();
        model.setRowCount(0);
        for (Network n : ecosystem.getcountryNetworkList()) {
            for (StateNetwork sn : n.getStateNetworkList()) {
                for (CityNetwork cn : sn.getCityNetworkList()) {

                    for (Enterprise enterprise : cn.getEnterpriseDirectory().getEnterpriseList()) {
                        for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList())//enterprise extends organization which contains UADir
                        {
                            Object[] row = new Object[4];
                            row[0] = enterprise.getName();
                            row[1] = enterprise.getEnterpriseType().getValue();
                            row[2] = n;
                            row[3] = userAccount.getUserName();
                            model.addRow(row);
                        }
                    }

                }
            }
        }
    }

    private void populateEnterpriseComboBox(CityNetwork cn) {
        enterprisejComboBox.removeAllItems();
        if (cn != null) {
            for (Enterprise e : cn.getEnterpriseDirectory().getEnterpriseList()) {
                enterprisejComboBox.addItem(e);
            }

        }
    }

}
