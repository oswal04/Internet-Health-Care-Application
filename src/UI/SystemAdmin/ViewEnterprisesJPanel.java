/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SystemAdmin;

import Business.Enterprise.Enterprise;
import Business.Network.CityNetwork;
import Business.Network.Network;
import Business.Network.StateNetwork;
import Business.Start.Ecosystem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chirag
 */
public class ViewEnterprisesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEnterprisesJPanel
     */
    JPanel userProcessContainer;
    Ecosystem ecosystem;

    public ViewEnterprisesJPanel(JPanel userProcessContainer, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewjTable = new javax.swing.JTable();
        backButton2 = new javax.swing.JButton();
        RemovejButton = new javax.swing.JButton();

        viewjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Enterprise Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewjTable);
        if (viewjTable.getColumnModel().getColumnCount() > 0) {
            viewjTable.getColumnModel().getColumn(0).setResizable(false);
            viewjTable.getColumnModel().getColumn(1).setResizable(false);
            viewjTable.getColumnModel().getColumn(2).setResizable(false);
        }

        backButton2.setText("<<Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        RemovejButton.setText("Remove Enterprise");
        RemovejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemovejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton2)
                        .addGap(56, 56, 56)
                        .addComponent(RemovejButton)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton2)
                    .addComponent(RemovejButton))
                .addContainerGap(256, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void RemovejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemovejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Enterprise!!!");
            return;
        }
        Enterprise ent = (Enterprise) viewjTable.getValueAt(selectedRow, 0);
        for (Network n : ecosystem.getcountryNetworkList()) {
            for (StateNetwork sn : n.getStateNetworkList()) {
                for (CityNetwork cn : sn.getCityNetworkList()) {
                    for (Enterprise e : cn.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e == ent) {
                            cn.getEnterpriseDirectory().removeEnterprise(ent);
                        }
                    }
                }
            }
        }
        populateTable();
        JOptionPane.showMessageDialog(null, "Record Deleted Successfully!!");
    }//GEN-LAST:event_RemovejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RemovejButton;
    private javax.swing.JButton backButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable viewjTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) viewjTable.getModel();
        model.setRowCount(0);
        for (Network n : ecosystem.getcountryNetworkList()) {
            for (StateNetwork sn : n.getStateNetworkList()) {
                for (CityNetwork cn : sn.getCityNetworkList()) {

                    for (Enterprise enterprise : cn.getEnterpriseDirectory().getEnterpriseList()) {
                        Object[] row = new Object[3];
                        row[0] = enterprise;
                        row[1] = n.getCountryname() + " >> " + sn.getStatename() + " >> " + cn.getCityname();
                        row[2] = enterprise.getEnterpriseType();

                        model.addRow(row);
                    }

                }
            }
        }
    }
}
