/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HospitalDoctor;

import Business.Employee.Doctor;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.HospitalDoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.Start.Ecosystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chirag
 */
public class ViewPatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientsJPanel
     */
    private JPanel userProcessContainer;
    private HospitalDoctorOrganization hospitalDoctorOrganization;
    private Ecosystem ecosystem;
    private UserAccount userAccount;
    private Enterprise enterprise;

    public ViewPatientsJPanel(JPanel userProcessContainer, UserAccount account, HospitalDoctorOrganization organization, Enterprise enterprise, Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.hospitalDoctorOrganization = organization;
        this.ecosystem = business;
        this.enterprise = enterprise;
        jLabel2.setText(userAccount.getUserName());
        populateTable();
        
        
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof PatientOrganization) {
               
          
          

            for(Employee e1: o.getEmployeeDirectory().getEmployeeList()){
                System.out.println("Patients"+e1);
            }
               

    }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewPatientsjTable = new javax.swing.JTable();
        backButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        viewDetailsjButton = new javax.swing.JButton();
        StartTreatmentjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        viewPatientsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Name", "Blood group", "DOB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewPatientsjTable);
        if (viewPatientsjTable.getColumnModel().getColumnCount() > 0) {
            viewPatientsjTable.getColumnModel().getColumn(0).setResizable(false);
            viewPatientsjTable.getColumnModel().getColumn(1).setResizable(false);
            viewPatientsjTable.getColumnModel().getColumn(2).setResizable(false);
            viewPatientsjTable.getColumnModel().getColumn(3).setResizable(false);
        }

        backButton2.setText("<<Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("View Patients");

        jLabel2.setText("jLabel2");

        viewDetailsjButton.setText("View details");
        viewDetailsjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsjButtonActionPerformed(evt);
            }
        });

        StartTreatmentjButton.setText("Start Treatment");
        StartTreatmentjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTreatmentjButtonActionPerformed(evt);
            }
        });

        jButton1.setText("View Past Record");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete Patient");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(backButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(viewDetailsjButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(StartTreatmentjButton)
                                    .addGap(27, 27, 27)
                                    .addComponent(jButton1))))))
                .addContainerGap(104, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsjButton)
                    .addComponent(StartTreatmentjButton)
                    .addComponent(jButton1))
                .addGap(35, 35, 35)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(backButton2)
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void viewDetailsjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsjButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = viewPatientsjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient!!!");
            return;
        }
        Patient p= (Patient) viewPatientsjTable.getValueAt(selectedRow,1);
        ViewPatientDetailsJPanel panel=new  ViewPatientDetailsJPanel(userProcessContainer,p);
        userProcessContainer.add("ViewPatientDetailsJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewDetailsjButtonActionPerformed

    private void StartTreatmentjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTreatmentjButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = viewPatientsjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient!!!");
            return;
        }
        Patient p= (Patient) viewPatientsjTable.getValueAt(selectedRow,1);
        TreatpatientJPanel1 panel=new TreatpatientJPanel1(userProcessContainer,userAccount,hospitalDoctorOrganization,enterprise,p,ecosystem);
        userProcessContainer.add("TreatPatientsJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_StartTreatmentjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int selectedRow = viewPatientsjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient!!!");
            return;
        }
        Patient p= (Patient) viewPatientsjTable.getValueAt(selectedRow,1);
        ViewPastEncounterJPanel panel=new  ViewPastEncounterJPanel(userProcessContainer,p);
        userProcessContainer.add("TreatPatientsJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewPatientsjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select patient!!!");
            return;
        }
        Patient p= (Patient) viewPatientsjTable.getValueAt(selectedRow,1);
        Doctor d=(Doctor) userAccount.getEmployee();
        d.getPatientDirectory().getPatientList().remove(p);
        populateTable();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartTreatmentjButton;
    private javax.swing.JButton backButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewDetailsjButton;
    private javax.swing.JTable viewPatientsjTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) viewPatientsjTable.getModel();
        model.setRowCount(0);
//        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
//            if (org instanceof PatientOrganization) {
//                
//                for (Employee e : org.getEmployeeDirectory().getEmployeeList()) {
//                   // if( e.getFname()==userAccount.getEmployee().getFname())
//                    Patient p= (Patient)e;
//                    Object[] row = new Object[5];
//                    row[0] =p.getPid();
//                    row[1] = p.getFname();
//                    row[2] =p.getLname();
//                    row[3] = p.getBloodGroup();
//
//                    model.addRow(row);
//
//                }
//
//            }
//        }
        Doctor d= (Doctor)userAccount.getEmployee();
        for(Patient p:d.getPatientDirectory().getPatientList())
        { Object[] row = new Object[5];
                    row[0] =p.getPid();
                    row[1] = p;
                    row[2] = p.getBloodGroup();
                    row[3]=p.getDob();

                    model.addRow(row);}
    }
}
