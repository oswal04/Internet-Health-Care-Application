/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PharmaCoMgr;

import Business.Drug.Drug;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmaceuticalCompanyEnterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Network.CityNetwork;
import Business.Network.Network;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import Business.Organization.PharmaceuticalCompanyMgrOrganization;
import Business.Organization.PharmacistOrganization;
import Business.Start.Ecosystem;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.FDA_PCWorkRequest;
import Business.WorkRequest.PC_PharmacyWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Loukik
 */
public class ViewFDAFeedbackJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewFDAFeedbackJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private PharmaceuticalCompanyMgrOrganization pharmaceuticalCompanyMgrOrganization;
    private Ecosystem ecosystem;
    private Enterprise enterprise;
    private PharmaceuticalCompanyEnterprise pce;

    public ViewFDAFeedbackJPanel(JPanel userProcessContainer, UserAccount userAccount, PharmaceuticalCompanyMgrOrganization organization, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.pharmaceuticalCompanyMgrOrganization = organization;
        this.ecosystem = ecosystem;
        if (enterprise instanceof PharmaceuticalCompanyEnterprise) {
            pce = (PharmaceuticalCompanyEnterprise) enterprise;
        }
        populateTable();
        populateCallbackTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedbackjTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        msgjTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        callbackjTable1 = new javax.swing.JTable();
        backButton2 = new javax.swing.JButton();

        jLabel1.setText("View FDA Feedback");

        feedbackjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request", "Drug Name", "Drug No", "Message", "Sender", "Sent On", "Receiver", "Received On", "Response"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(feedbackjTable1);

        jButton1.setText("Send Response");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Message:");

        jButton2.setText("Callback  Drug");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        callbackjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Drug name", "Drug Id", "Callback Date"
            }
        ));
        jScrollPane2.setViewportView(callbackjTable1);

        backButton2.setText("<<Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(backButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2)
                    .addComponent(msgjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss  MMM/dd/yyyy");
        String resDate = (dateFormat.format(date));

        int selectedRow = feedbackjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a record!!");
            return;
        }
        FDA_PCWorkRequest workRequest = (FDA_PCWorkRequest) feedbackjTable1.getValueAt(selectedRow, 0);

        workRequest.setReceiver(userAccount);
        workRequest.setResolveDate(resDate);
        workRequest.setStatus("Investigating Problem " + msgjTextField.getText());
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss  MMM/dd/yyyy");
        String cDate = (dateFormat.format(date));
        int selectedRow = feedbackjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a record!!");
            return;
        }
        PC_PharmacyWorkRequest pcpwr = new PC_PharmacyWorkRequest();
        pcpwr.setD((Drug) feedbackjTable1.getValueAt(selectedRow, 1));
        pcpwr.setSender(userAccount);
        pcpwr.setRequestDate(cDate);
        pcpwr.setMessage("Drug is faulty. Please send it back");

        for (Network n : ecosystem.getcountryNetworkList()) {
            for (StateNetwork sn : n.getStateNetworkList()) {
                for (CityNetwork cn : sn.getCityNetworkList()) {
                    for (Enterprise enterprise : cn.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise instanceof PharmacyEnterprise) {
                            PharmacyEnterprise pe = (PharmacyEnterprise) enterprise;
                            for (Organization org : pe.getOrganizationDirectory().getOrganizationList()) {
                                if (org instanceof PharmacistOrganization) {
                                    PharmacistOrganization po = (PharmacistOrganization) org;
                                    org.getWorkQueue().getWorkList().add(pcpwr);
                                    userAccount.getWorkQueue().getWorkList().add(pcpwr);
                                }
                            }

                        }
                    }
                }
            }

        }
        populateCallbackTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton2;
    private javax.swing.JTable callbackjTable1;
    private javax.swing.JTable feedbackjTable1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField msgjTextField;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) feedbackjTable1.getModel();
        model.setRowCount(0);
        for (Organization org : pce.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof PharmaceuticalCompanyMgrOrganization) {
                for (WorkRequest wr : org.getWorkQueue().getWorkList()) {
                    if (wr instanceof FDA_PCWorkRequest) {
                        FDA_PCWorkRequest request = (FDA_PCWorkRequest) wr;
                        Object[] row = new Object[10];
                        row[0] = request;
                        row[1] = request.getDrug();
                        row[2] = request.getDrug().getDrugNo();
                        row[3] = request.getMessage();
                        row[4] = request.getSender();
                        row[5] = request.getRequestDate();
                        row[6] = request.getReceiver();
                        row[7] = request.getReceiver();
                        row[8] = request.getStatus();

                        model.addRow(row);
                    }
                }
            }
        }
    }

    private void populateCallbackTable() {
        DefaultTableModel model = (DefaultTableModel) callbackjTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : userAccount.getWorkQueue().getWorkList()) {
            if (wr instanceof PC_PharmacyWorkRequest) {
                PC_PharmacyWorkRequest request = (PC_PharmacyWorkRequest) wr;
                Object[] row = new Object[10];
                row[0] = request;
                row[1] = request.getD();
                row[2] = request.getD().getDrugNo();
                row[3] = request.getRequestDate();
                model.addRow(row);
            }
        }
    }
}

