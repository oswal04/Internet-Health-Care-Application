/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HospitalLab;

import Business.Organization.HospitalLabOrganization;
import Business.Start.Ecosystem;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.Dr_LabWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chirag
 */
public class HLabWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HLabWorkAreaJPanel
     */
     private JPanel userProcessContainer;
    private HospitalLabOrganization hospitalLabOrganization;
    private Ecosystem ecosystem;
    private UserAccount userAccount;
    public HLabWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, HospitalLabOrganization organization, Ecosystem business) {
        initComponents();
         initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=account;
        this.hospitalLabOrganization=organization;
        this.ecosystem=business;
        jLabel2.setText(userAccount.getUserName());
        populateLabReqTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        labRequestjTable = new javax.swing.JTable();
        assignjButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        resultjTextField = new javax.swing.JTextField();
        sendjButton2 = new javax.swing.JButton();
        backButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("Lab Assistant Work Area");

        jLabel2.setText("jLabel2");

        labRequestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Patient", "Status", "Test result"
            }
        ));
        jScrollPane1.setViewportView(labRequestjTable);

        assignjButton1.setText("Assign to me");
        assignjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignjButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Test Result:");

        sendjButton2.setText("Submit Result");
        sendjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendjButton2ActionPerformed(evt);
            }
        });

        backButton2.setText("<<Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(assignjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(resultjTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sendjButton2)
                        .addGap(61, 61, 61)
                        .addComponent(backButton2)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(assignjButton1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(resultjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendjButton2)
                    .addComponent(backButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labRequestjTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) labRequestjTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateLabReqTable();
    }//GEN-LAST:event_assignjButton1ActionPerformed

    private void sendjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendjButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labRequestjTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) labRequestjTable.getValueAt(selectedRow, 0);
        Dr_LabWorkRequest dlwr = (Dr_LabWorkRequest) request;
        dlwr.setTestResult(resultjTextField.getText());
        dlwr.setStatus("Report Sent");
        populateLabReqTable();

    }//GEN-LAST:event_sendjButton2ActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignjButton1;
    private javax.swing.JButton backButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable labRequestjTable;
    private javax.swing.JTextField resultjTextField;
    private javax.swing.JButton sendjButton2;
    // End of variables declaration//GEN-END:variables

    private void populateLabReqTable() {
         DefaultTableModel model = (DefaultTableModel) labRequestjTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : hospitalLabOrganization.getWorkQueue().getWorkList()) {
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender().getEmployee();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee();
            Dr_LabWorkRequest dlwr = (Dr_LabWorkRequest) request;
            row[3] = dlwr.getPatient();
            row[4] = request.getStatus();
            row[5] = dlwr.getTestResult();
            model.addRow(row);
        }
    }
}
